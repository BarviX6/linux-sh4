# LIRC http://lirc.sf.net/
# Kernel patch by Flameeyes <dgp85@users.sf.net>
# Check for new patch at http://flameeyes.web.ctonet.it
#
# Thanks to Koos Vriezen <koos.vriezen@xs4all.nl> for the Homebrew support.
# Thanks to Jeff Clark <jeff@tmtrading.com> for support when I wasn't able
# to update it and for his patch (found at http://www.clarkmania.com/~jclark/
# Thanks to Bernhard Rosenkraenzer <bero@arklinux.org> for SMP patch.
# Thanks to Vince <fuzzy77@free.fr> for the temporary lirc_atiusb driver.
# Thanks to Paul Miller <pmiller9@users.sourceforge.net> for the new working
# lirc_atiusb driver.

menu "Linux InfraRed Controller"

config LIRC_SUPPORT
	tristate "Linux InfraRed Controller"

	config LIRC_MCEUSB
		tristate "MCE USB Driver"
		depends on LIRC_SUPPORT && USB
		help
		  USB Microsoft IR Transceiver driver

	config LIRC_MCEUSB2
		tristate "MCE USB Driver"
		depends on LIRC_SUPPORT && USB
		help
		  LIRC driver for the Philips eHome USB Infrared
		  Transciever and the Microsoft MCE 2005 Remote Control

	config LIRC_SERIAL
		tristate "Serial Driver"
		depends on LIRC_SUPPORT && SERIAL_8250

		choice
			prompt "Serial Receiver Type"
			depends on LIRC_SERIAL

			config LIRC_HOMEBREW
				bool "Homebrew"

			config LIRC_SERIAL_ANIMAX
				bool "Animax"

			config LIRC_SERIAL_IRDEO
				bool "IRdeo"

			config LIRC_SERIAL_IRDEO_REMOTE
				bool "IRdeo Remote"

			config LIRC_SERIAL_NSLU2
				bool "NSLU2"

			config LIRC_SERIAL_IGOR
				bool "Igor Ceska's variation"

		endchoice

		config LIRC_SERIAL_TRANSMITTER
			bool "With transmitter diode"
			depends on LIRC_SERIAL && !LIRC_SERIAL_ANIMAX

		config LIRC_SERIAL_SOFTCARRIER
			bool "With software carrier"
			depends on LIRC_SERIAL_TRANSMITTER

		choice
			prompt "Serial Port"
			depends on LIRC_SERIAL
			config LIRC_SERIAL_COM1
				bool "COM1 (0x3f8, 4)"
			config LIRC_SERIAL_COM2
				bool "COM2 (0x2f8, 3)"
			config LIRC_SERIAL_COM3
				bool "COM3 (0x3e8, 4)"
			config LIRC_SERIAL_COM4
				bool "COM4 (0x2e8, 3)"
			config LIRC_SERIAL_OTHER
				bool "Other (custom values)"
		endchoice

		config LIRC_PORT_SERIAL
			hex "I/O Port"
				default "0x3f8" if LIRC_SERIAL_COM1
				default "0x2f8" if LIRC_SERIAL_COM2
				default "0x3e8" if LIRC_SERIAL_COM3
				default "0x2e8" if LIRC_SERIAL_COM4
			depends on LIRC_SERIAL

		config LIRC_IRQ_SERIAL
			hex "IRQ"
				default "4" if LIRC_SERIAL_COM1 || LIRC_SERIAL_COM3
				default "3" if LIRC_SERIAL_COM2 || LIRC_SERIAL_COM4
			depends on LIRC_SERIAL

	config LIRC_SIR
		tristate "SIR Driver"
		depends on LIRC_SUPPORT

		config LIRC_ON_SA1100
			bool "LIRC driver for StrongARM SA1100 embedded microprocessor"
			depends on LIRC_SIR

		choice
			prompt "SIR Type"
			depends on LIRC_SIR && !LIRC_ON_SA1100

			config LIRC_SIR_IRDA
				bool "SIR IrDA (built-in IR ports)"

			config LIRC_SIR_TEKRAM
				bool "Tekram Irmate 210 (16x50 UART compatible serial port)"

			config LIRC_SIR_ACTISYS_ACT200L
				bool "Actisys Act200L SIR driver support"

		endchoice

		choice
			prompt "Serial Port"
			depends on LIRC_SIR
			config LIRC_SIR_COM1
				bool "COM1 (0x3f8, 4)"
			config LIRC_SIR_COM2
				bool "COM2 (0x2f8, 3)"
			config LIRC_SIR_COM3
				bool "COM3 (0x3e8, 4)"
			config LIRC_SIR_COM4
				bool "COM4 (0x2e8, 3)"
			config LIRC_SIR_OTHER
				bool "Other (custom values)"
		endchoice

		config LIRC_PORT_SIR
			hex "I/O Port"
				default "0x3f8" if LIRC_SIR_COM1
				default "0x2f8" if LIRC_SIR_COM2
				default "0x3e8" if LIRC_SIR_COM3
				default "0x2e8" if LIRC_SIR_COM4
			depends on LIRC_SIR

		config LIRC_IRQ_SIR
			hex "IRQ"
				default "4" if LIRC_SIR_COM1 || LIRC_SIR_COM3
				default "3" if LIRC_SIR_COM2 || LIRC_SIR_COM4
			depends on LIRC_SIR
        config LIRC_STM
                tristate "STM Lirc support"
                depends on LIRC_SUPPORT && CPU_SUBTYPE_ST40
		help
		  The IR and UHF are identical and independent, except
		  that the IRB receiver does not use the noise filter.
		  Not all ST platforms support both type of receivers.
		  IR RX is the default mode.

        config LIRC_STM_UHF_RX
	        bool "UHF Receiver mode"
		depends on LIRC_STM
		help
		  This causes the driver to use UHF RX mode.

	        config LIRC_STM_UHF_SCD
		        bool "Start Code Detector - SCD"
			depends on LIRC_STM_UHF_RX
			default y
			help
			  This causes the driver to use SCD on UHF RX mode.
			  The start code detector detects any programmable start
			  code on UHF RX input. It works on a time unit called
			  symbol time. One graphical example to understand how to
			  configure properly the code, code length and nominal time
			  values based on Remote Control signals train can be found in
			  drivers/char/lirc/lirc_stm.c driver.

	        config LIRC_STM_UHF_SCD_CODE
			hex "Code to be detected"
			default "0x3FFFC028"
			depends on LIRC_STM_UHF_SCD
			help
			  Default value for Futarque RC is 0x3FFFC028.

	        config LIRC_STM_UHF_SCD_LEN
			hex "Code length"
			default "0x1e"
			depends on LIRC_STM_UHF_SCD
			help
			  Default value for Futarque RC is 0x1e.

	        config LIRC_STM_UHF_SCD_NTIME
			hex "Nominal time for a symbol"
				default "0x1f4"
			depends on LIRC_STM_UHF_SCD
			help
			  Default value for Futarque RC is 0x1f4.

	config LIRC_STM_DEBUG
		depends on LIRC_STM
		bool "Lirc debug"
		default n
		help
		  Say yes if you want enable some debug printk information

	config LIRC_TTUSBIR
	        tristate "Technotrend USB IR Receiver"
	        depends on LIRC_SUPPORT && USB
	        help
	          Driver for the Technotrend USB IR Receiver

endmenu

